/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/MainScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainScreenViewBase::MainScreenViewBase() :
    buttonCallback(this, &MainScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image_background.setXY(0, -20);
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_CARBON_FIBER_WALLPAPER_ID));
    add(image_background);

    textArea_ms_1.setXY(657, 190);
    textArea_ms_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea_ms_1.setLinespacing(0);
    textArea_ms_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EPN6));
    add(textArea_ms_1);

    textArea_timeSetting.setXY(58, 190);
    textArea_timeSetting.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea_timeSetting.setLinespacing(0);
    textArea_timeSetting.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LD5P));
    add(textArea_timeSetting);

    textArea_time.setPosition(470, 178, 170, 85);
    textArea_time.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea_time.setLinespacing(0);
    Unicode::snprintf(textArea_timeBuffer, TEXTAREA_TIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TO73).getText());
    textArea_time.setWildcard(textArea_timeBuffer);
    textArea_time.setTypedText(touchgfx::TypedText(T___SINGLEUSE_00LK));
    add(textArea_time);

    buttonWithLabel_setTime.setXY(58, 377);
    buttonWithLabel_setTime.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_MEDIUM_ROUNDED_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_MEDIUM_ROUNDED_PRESSED_ID));
    buttonWithLabel_setTime.setLabelText(touchgfx::TypedText(T___SINGLEUSE_58PG));
    buttonWithLabel_setTime.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel_setTime.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel_setTime.setAction(buttonCallback);
    add(buttonWithLabel_setTime);

    buttonWithLabel_send.setXY(430, 377);
    buttonWithLabel_send.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_MEDIUM_ROUNDED_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_MEDIUM_ROUNDED_PRESSED_ID));
    buttonWithLabel_send.setLabelText(touchgfx::TypedText(T___SINGLEUSE_DYLH));
    buttonWithLabel_send.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel_send.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel_send.setAction(buttonCallback);
    add(buttonWithLabel_send);

    toggleButton_diode.setXY(235, 76);
    toggleButton_diode.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_TEXT_ON_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_TEXT_OFF_NORMAL_ID));
    toggleButton_diode.setAction(buttonCallback);
    add(toggleButton_diode);
}

MainScreenViewBase::~MainScreenViewBase()
{

}

void MainScreenViewBase::setupScreen()
{

}

void MainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_setTime)
    {
        //Interaction_setTimeClicked
        //When buttonWithLabel_setTime clicked call virtual function
        //Call setTime
        setTime();
    }
    if (&src == &buttonWithLabel_send)
    {
        //Interaction_sendClicked
        //When buttonWithLabel_send clicked call virtual function
        //Call sendTime
        sendTime();
    }
    if (&src == &toggleButton_diode)
    {
        //Interaction_toggleDiode
        //When toggleButton_diode clicked execute C++ code
        //Execute C++ code
        HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
    }
}
